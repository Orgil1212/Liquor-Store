package controllers

import (
	"liquor-store/config"
	"liquor-store/models"
	"liquor-store/utils"
	"log" // üìå –°–∞–Ω–∞–º—Å–∞—Ä–≥“Ø–π —Ç–æ–æ “Ø“Ø—Å–≥—ç—Ö —Å–∞–Ω
	"net/http"

	"github.com/gin-gonic/gin"
)

func ForgotPassword(c *gin.Context) {
	var input struct {
		Email string `json:"email"`
	}

	// –ò–º—ç–π–ª —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞—Ö
	if err := c.ShouldBindJSON(&input); err != nil {
		log.Println("‚ùå –ò–º—ç–π–ª —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:", err)
		c.JSON(http.StatusBadRequest, gin.H{"error": "Email –∑–∞–∞–≤–∞–ª —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π!"})
		return
	}

	// –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª–ª–∏–π–≥ –æ–ª–æ—Ö
	var user models.User
	if err := config.DB.Where("email = ?", input.Email).First(&user).Error; err != nil {
		log.Println("‚ùå –•—ç—Ä—ç–≥–ª—ç–≥—á –æ–ª–¥—Å–æ–Ω–≥“Ø–π:", err) // –ê–ª–¥–∞–∞–≥ —Ö—ç–≤–ª—ç—Ö
		c.JSON(http.StatusNotFound, gin.H{"error": "–•—ç—Ä—ç–≥–ª—ç–≥—á –æ–ª–¥—Å–æ–Ω–≥“Ø–π!"})
		return
	}

	// –ù—ç–≥ —É–¥–∞–∞–≥–∏–π–Ω –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥ “Ø“Ø—Å–≥—ç—Ö
	verificationCode := utils.GenerateVerificationCode()
	log.Println("‚úÖ –ë–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥:", verificationCode) // –ë–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥

	// –¢“Ø—Ä –∫–æ–¥—ã–≥ –∏–ª–≥—ç—ç—Ö
	if err := utils.SendVerificationCodeEmail(user.Email, verificationCode); err != nil {
		log.Println("‚ùå –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:", err) // –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö –∞–ª–¥–∞–∞
		c.JSON(http.StatusInternalServerError, gin.H{"error": "–ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞!"})
		return
	}

	c.JSON(http.StatusOK, gin.H{"message": "–¢–∞–Ω—ã –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥ –∏–º—ç–π–ª —Ö–∞—è–≥ —Ä—É—É –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç."})
}
