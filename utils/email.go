package utils

import (
	"fmt"
	"net/smtp"
)

func SendVerificationCodeEmail(toEmail, verificationCode string) error {
	from := "your-email@gmail.com"
	password := "your-email-password"

	// SMTP —Å–µ—Ä–≤–µ—Ä–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ
	smtpHost := "smtp.gmail.com"
	smtpPort := "587"

	// –ò–º—ç–π–ª –∞–≥—É—É–ª–≥–∞
	subject := "–¢–∞–Ω—ã –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥"
	body := fmt.Sprintf("–¢–∞–Ω—ã –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥: %s", verificationCode)

	message := []byte("Subject: " + subject + "\r\n" + "To: " + toEmail + "\r\n" + "\r\n" + body)

	// SMTP –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü
	auth := smtp.PlainAuth("", from, password, smtpHost)

	// –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö
	err := smtp.SendMail(smtpHost+":"+smtpPort, auth, from, []string{toEmail}, message)
	if err != nil {
		return fmt.Errorf("–∏–º—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: %v", err)
	}
	return nil
}

// üìå –¢“Ø—Ä –Ω—É—É—Ü “Ø–≥ –∏–ª–≥—ç—ç—Ö —Ñ—É–Ω–∫—Ü

func SendPasswordResetEmail(toEmail, tempPassword string) error {
	from := "orgiloorgil16@gmail.com"
	password := "wxja rcue qzee ymwl"

	// SMTP —Ç–æ—Ö–∏—Ä–≥–æ–æ
	smtpHost := "smtp.gmail.com"
	smtpPort := "587"

	// –ò–º—ç–π–ª –∫–æ–Ω—Ç–µ–Ω—Ç
	subject := "–¢–∞–Ω—ã —Ç“Ø—Ä –Ω—É—É—Ü “Ø–≥"
	body := fmt.Sprintf("–¢–∞–Ω—ã —Ç“Ø—Ä –Ω—É—É—Ü “Ø–≥: %s", tempPassword)

	message := []byte("Subject: " + subject + "\r\n" + "To: " + toEmail + "\r\n" + "\r\n" + body)

	// –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö
	auth := smtp.PlainAuth("", from, password, smtpHost)
	err := smtp.SendMail(smtpHost+":"+smtpPort, auth, from, []string{toEmail}, message)
	if err != nil {
		return fmt.Errorf("–∏–º—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: %v", err)
	}
	return nil
}
func SendVerificationEmail(toEmail, verificationToken string) error {
	from := "orgiloorgil16@gmail.com"
	password := "wxja rcue qzee ymwl" // –¢–∞–Ω—ã –∏–º—ç–π–ª —Ö–∞—è–≥–∏–π–Ω –Ω—É—É—Ü “Ø–≥

	// SMTP —Å–µ—Ä–≤–µ—Ä–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ
	smtpHost := "smtp.gmail.com"
	smtpPort := "587"

	// –ò–º—ç–π–ª –∞–≥—É—É–ª–≥–∞
	subject := "–ò–º—ç–π–ª –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞–ª—Ç"
	body := fmt.Sprintf("–¢–∞–Ω—ã –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö –∫–æ–¥: %s", verificationToken)

	message := []byte("Subject: " + subject + "\r\n" + "To: " + toEmail + "\r\n" + "\r\n" + body)

	// SMTP –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü
	auth := smtp.PlainAuth("", from, password, smtpHost)

	// –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö
	err := smtp.SendMail(smtpHost+":"+smtpPort, auth, from, []string{toEmail}, message)
	if err != nil {
		return fmt.Errorf("–∏–º—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: %v", err)
	}
	return nil
}
